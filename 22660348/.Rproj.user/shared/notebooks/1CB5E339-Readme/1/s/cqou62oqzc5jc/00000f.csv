"0","library(tidyverse)"
"0","library(janitor)"
"0",""
"0","Health %>% clean_names() %>% # Optional but can skip if you want exact names with spaces and caps"
"0","  # Since you want exact original names with spaces and caps, do NOT clean_names here. "
"0","  # So let's skip clean_names and work with original names directly."
"0",""
"0","  # 1. Sample Representativeness by Age"
"0","  {"
"0","    age_summary <- summarise(.,"
"0","                             count = n(),"
"0","                             min_age = min(`Age`, na.rm = TRUE),"
"0","                             max_age = max(`Age`, na.rm = TRUE),"
"0","                             mean_age = mean(`Age`, na.rm = TRUE),"
"0","                             median_age = median(`Age`, na.rm = TRUE),"
"0","                             age_sd = sd(`Age`, na.rm = TRUE)"
"0","    )"
"0","    print(""Age Distribution Summary:"")"
"0","    print(age_summary)"
"0","    "
"0","    ggplot(., aes(x = `Age`)) + "
"0","      geom_histogram(binwidth = 5, fill = ""skyblue"", color = ""black"") +"
"0","      labs(title = ""Age Distribution"", x = ""Age (years)"", y = ""Count"") +"
"0","      theme_minimal() -> age_plot"
"0","    print(age_plot)"
"0","    "
"0","    ."
"0","  } %>%"
"0","  "
"0","  # 2. Gender Distribution and Weight Change Patterns by Gender and Age"
"0","  {"
"0","    gender_dist <- count(., `Gender`) %>% "
"0","      mutate(percent = n / sum(n) * 100)"
"0","    print(""Gender Distribution:"")"
"0","    print(gender_dist)"
"0","    "
"0","    . %>%"
"0","      mutate(age_group = case_when("
"0","        `Age` < 20 ~ ""Teen"","
"0","        `Age` >= 20 & `Age` < 60 ~ ""Adult"","
"0","        TRUE ~ ""Older Adult"""
"0","      )) %>%"
"0","      group_by(`Gender`, age_group) %>%"
"0","      summarise("
"0","        mean_weight_change = mean(`Weight Change (lbs)`, na.rm = TRUE),"
"0","        median_weight_change = median(`Weight Change (lbs)`, na.rm = TRUE),"
"0","        n = n(),"
"0","        .groups = 'drop'"
"0","      ) -> gender_age_weight_change"
"0","    "
"0","    print(""Weight Change by Gender and Age Group:"")"
"0","    print(gender_age_weight_change)"
"0","    "
"0","    ."
"0","  } %>%"
"0","  "
"0","  # 3. Current Weight & Weight Change Validity Check (duration & outliers)"
"0","  {"
"0","    duration_summary <- summarise(.,"
"0","                                 min_duration = min(`Duration (weeks)`, na.rm = TRUE),"
"0","                                 max_duration = max(`Duration (weeks)`, na.rm = TRUE),"
"0","                                 median_duration = median(`Duration (weeks)`, na.rm = TRUE))"
"0","    print(""Duration (weeks) Summary:"")"
"0","    print(duration_summary)"
"0","    "
"0","    . %>%"
"0","      mutate(rate_weight_change = `Weight Change (lbs)` / `Duration (weeks)`) %>%"
"0","      mutate(unrealistic_change = abs(rate_weight_change) > 2) -> weight_change_rate_df"
"0","    "
"0","    unrealistic_count <- filter(weight_change_rate_df, unrealistic_change) %>% nrow()"
"0","    print(paste(""Number of unrealistic weight change rates (>2 lbs/week):"", unrealistic_count))"
"0","    "
"0","    ."
"0","  } %>%"
"0","  "
"0","  # 4. Calories Consumed & Surplus/Deficit"
"0","  {"
"0","    cal_summary <- summarise(.,"
"0","                            mean_calories = mean(`Daily Calories Consumed`, na.rm = TRUE),"
"0","                            median_calories = median(`Daily Calories Consumed`, na.rm = TRUE),"
"0","                            mean_surplus_deficit = mean(`Daily Caloric Surplus/Deficit`, na.rm = TRUE),"
"0","                            median_surplus_deficit = median(`Daily Caloric Surplus/Deficit`, na.rm = TRUE)"
"0","    )"
"0","    print(""Calories and Surplus/Deficit Summary:"")"
"0","    print(cal_summary)"
"0","    "
"0","    . %>%"
"0","      group_by(`Physical Activity Level`) %>%"
"0","      summarise(mean_surplus_deficit = mean(`Daily Caloric Surplus/Deficit`, na.rm = TRUE),"
"0","                count = n()) -> cal_activity_summary"
"0","    print(""Caloric Surplus/Deficit by Physical Activity Level:"")"
"0","    print(cal_activity_summary)"
"0","    "
"0","    ."
"0","  } %>%"
"0","  "
"0","  # 5. Sleep Quality Check"
"0","  {"
"0","    sleep_dist <- count(., `Sleep Quality`) %>% "
"0","      mutate(percent = n / sum(n) * 100)"
"0","    print(""Sleep Quality Distribution:"")"
"0","    print(sleep_dist)"
"0","    "
"0","    ."
"0","  } %>%"
"0","  "
"0","  # 6. Define meaningful surplus/deficit categories"
"0","  {"
"0","    . %>%"
"0","      mutate("
"0","        cal_balance_cat = case_when("
"0","          `Daily Caloric Surplus/Deficit` > 200 ~ ""Surplus >200"","
"0","          `Daily Caloric Surplus/Deficit` < -200 ~ ""Deficit >200"","
"0","          TRUE ~ ""Within Â±200"""
"0","        )"
"0","      ) -> cal_cat_df"
"0","    "
"0","    cal_cat_summary <- count(cal_cat_df, cal_balance_cat) %>% "
"0","      mutate(percent = n / sum(n) * 100)"
"0","    print(""Caloric Surplus/Deficit Categories Distribution:"")"
"0","    print(cal_cat_summary)"
"0","    "
"0","    ."
"0","  } %>%"
"0","  "
"0","  # 7. Rate of Weight Change (summary)"
"0","  {"
"0","    . %>%"
"0","      mutate(rate_weight_change = `Weight Change (lbs)` / `Duration (weeks)`) %>%"
"0","      summarise("
"0","        mean_rate = mean(rate_weight_change, na.rm = TRUE),"
"0","        median_rate = median(rate_weight_change, na.rm = TRUE),"
"0","        max_rate = max(rate_weight_change, na.rm = TRUE),"
"0","        min_rate = min(rate_weight_change, na.rm = TRUE)"
"0","      ) -> weight_change_rate_summary"
"0","    print(""Weight Change Rate Summary (lbs/week):"")"
"0","    print(weight_change_rate_summary)"
"0","    "
"0","    ."
"0","  }"
"1","[1]"
"1"," ""Weight Change Rate Summary (lbs/week):"""
"1","
"
"1","Functional sequence with the following components:

"
"1"," "
"1",""
"1","1"
"1",""
"1",". "
"1",""
"1","mutate(., rate_weight_change = `Weight Change (lbs)`/`Duration (weeks)`)"
"1",""
"1","
"
"1"," "
"1",""
"1","2"
"1",""
"1",". "
"1",""
"1","summarise(., mean_rate = mean(rate_weight_change, na.rm = TRUE), "
"1",""
"1","    median_rate = median(rate_weight_change, na.rm = TRUE), max_rate = max(rate_weight_change, "
"1",""
"1","        na.rm = TRUE), min_rate = min(rate_weight_change, na.rm = TRUE))"
"1",""
"1","
"
"1","
Use 'functions' to extract the individual functions."
"1"," "
"1","
"
"2","Error in UseMethod(""count"") : 
  no applicable method for 'count' applied to an object of class ""c('fseq', 'function')""
"
