yend = max(top_artists$impact_ratio)*0.7),
arrow = arrow(length = unit(2, "mm")),
color = "#E63946", curvature = -0.3, inherit.aes = FALSE)
# Save the plot
ggsave(
filename = "musicimpact.png",  # change the filename as needed
plot = musicmpact,            # replace with your ggplot object
path = "C:/Users/pmnha/my-new-project/22660348/Question1/Results",
width = 8,
height = 6,
dpi = 300
)
# Save the plot
ggsave(
filename = "musicimpact.png",  # change the filename as needed
plot = musicimpact,            # replace with your ggplot object
path = "C:/Users/pmnha/my-new-project/22660348/Question1/Results",
width = 8,
height = 6,
dpi = 300
)
# Add 'decade' and filter to top 10 artist-influenced names
top_10_names <- top_artists$firstname
baby_decades <- baby_names %>%
mutate(decade = floor(Year / 10) * 10) %>%
filter(Name %in% top_10_names) %>%
group_by(Name, decade, Gender) %>%
summarise(total = sum(Count), .groups = "drop")  # total per name per decade
ggplot(baby_decades, aes(
x = Name,
y = decade,
size = total,
color = ifelse(total > quantile(total, 0.9), "#1f77b4", "gray70")  # Highlight top 10%
)) +
geom_point(alpha = 0.8) +
scale_size(range = c(3, 18), name = "Total Name Count") +
scale_y_continuous(breaks = seq(1910, 2020, by = 10)) +
scale_color_identity() +  # Use color as-is (no legend)
labs(
title = "The Rise and Fall of Popular First Names by Decade",
subtitle = "Top 10 names show shifting cultural trends—larger dots indicate higher usage",
x = "Name",
y = "Decade",
caption = "Data: Historical baby name records (1910–2020)"
) +
theme_minimal(base_size = 14) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, face = "bold"),
axis.text.y = element_text(face = "bold"),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5, color = "gray40"),
panel.grid.major = element_line(color = "gray90"),
panel.grid.minor = element_blank(),
legend.position = "right"
) +
guides(size = guide_legend(override.aes = list(color = "#1f77b4")))  # Ensure legend uses highlight color
bubble <- ggplot(baby_decades, aes(
x = Name,
y = decade,
size = total,
color = ifelse(total > quantile(total, 0.9), "#1f77b4", "gray70")  # Highlight top 10%
)) +
geom_point(alpha = 0.8) +
scale_size(range = c(3, 18), name = "Total Name Count") +
scale_y_continuous(breaks = seq(1910, 2020, by = 10)) +
scale_color_identity() +  # Use color as-is (no legend)
labs(
title = "The Rise and Fall of Popular First Names by Decade",
subtitle = "Top 10 names show shifting cultural trends—larger dots indicate higher usage",
x = "Name",
y = "Decade",
caption = "Data: Historical baby name records (1910–2020)"
) +
theme_minimal(base_size = 14) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, face = "bold"),
axis.text.y = element_text(face = "bold"),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5, color = "gray40"),
panel.grid.major = element_line(color = "gray90"),
panel.grid.minor = element_blank(),
legend.position = "right"
) +
guides(size = guide_legend(override.aes = list(color = "#1f77b4")))  # Ensure legend uses highlight color
# Save the plot
ggsave(
filename = "bubble.png",  # change the filename as needed
plot = bubble,            # replace with your ggplot object
path = "C:/Users/pmnha/my-new-project/22660348/Question1/Results",
width = 8,
height = 6,
dpi = 300
)
knitr::include_graphics("C:/Users/pmnha/my-new-project/22660348/Question1/Results/bubble.png")
knitr::include_graphics("C:/Users/pmnha/my-new-project/22660348/Question1/Results/fadsonewonders.png")
knitr::include_graphics("C:/Users/pmnha/my-new-project/22660348/Question1/Results/mediaimpact.png")
knitr::include_graphics("C:/Users/pmnha/my-new-project/22660348/Question1/Results/bubble.png")
knitr::include_graphics("C:/Users/pmnha/my-new-project/22660348/Question1/Results/fadsonewonders.png")
knitr::include_graphics("C:/Users/pmnha/my-new-project/22660348/Question1/Results/mediaimpact.jpg")
knitr::include_graphics("C:/Users/pmnha/my-new-project/22660348/Question1/Results/musicimpact.png")
knitr::include_graphics("C:/Users/pmnha/my-new-project/22660348/Question1/Results/namepopularity.png")
knitr::include_graphics("C:/Users/pmnha/my-new-project/22660348/Question1/Results/namepopularity.png")
knitr::include_graphics("C:/Users/pmnha/my-new-project/22660348/Question1/Results/fadsonewonders.png")
knitr::include_graphics("C:/Users/pmnha/my-new-project/22660348/Question1/Results/mediaimpact.jpg")
knitr::include_graphics("C:/Users/pmnha/my-new-project/22660348/Question1/Results/musicimpact.png")
knitr::include_graphics("C:/Users/pmnha/my-new-project/22660348/Question1/Results/bubble.png")
knitr::include_graphics("C:/Users/pmnha/my-new-project/22660348/Question1/Results/namepopularity.png")
knitr::include_graphics("C:/Users/pmnha/my-new-project/22660348/Question1/Results/fadsonewonders.png")
knitr::include_graphics("C:/Users/pmnha/my-new-project/22660348/Question1/Results/mediaimpact.jpg")
knitr::include_graphics("C:/Users/pmnha/my-new-project/22660348/Question1/Results/musicimpact.png")
knitr::include_graphics("C:/Users/pmnha/my-new-project/22660348/Question1/Results/bubble.png")
knitr::include_graphics("C:/Users/pmnha/my-new-project/22660348/Question1/Results/namepopularity.png")
knitr::include_graphics("C:/Users/pmnha/my-new-project/22660348/Question1/Results/fadsonewonders.png")
knitr::include_graphics("C:/Users/pmnha/my-new-project/22660348/Question1/Results/mediaimpact.jpg")
knitr::include_graphics("C:/Users/pmnha/my-new-project/22660348/Question1/Results/musicimpact.png")
knitr::include_graphics("C:/Users/pmnha/my-new-project/22660348/Question1/Results/bubble.png")
popularity_changes <- baby_names %>%
group_by(Year, Name, Gender) %>%
summarise(Total = sum(Count), .groups = "drop") %>%
arrange(Name, Gender, Year) %>%
group_by(Name, Gender) %>%
mutate(Change = Total - lag(Total)) %>%
ungroup() %>%
arrange(desc(Change)) %>%
filter(!is.na(Change)) %>%
slice_head(n = 20)
popularity_changes
View(popularity_changes)
library(ggplot2)
top_names <- name_longevity %>%
slice_max(YearsInTop25, n = 10)
#Load all libraries
library(readr)
library(dplyr)
library(ggplot2)
#Load dataset
baby_names<- readRDS("C:/Users/pmnha/my-new-project/22660348/Question1/Data/Baby_Names_By_US_State.rds")
charts <- readRDS("C:/Users/pmnha/my-new-project/22660348/Question1/Data/charts.rds")
hbo_credits <- readRDS("C:/Users/pmnha/my-new-project/22660348/Question1/Data/HBO_credits.rds")
hbo_titles <- readRDS("C:/Users/pmnha/my-new-project/22660348/Question1/Data/HBO_titles.rds")
)
top_25_names_per_year_gender <- baby_names %>%
group_by(Year, Gender, Name) %>%
summarise(Total = sum(Count), .groups = "drop") %>%
arrange(Year, Gender, desc(Total)) %>%
group_by(Year, Gender) %>%
slice_head(n = 25)
name_longevity <- top_25_names_per_year_gender %>%
group_by(Name, Gender) %>%
summarise(YearsInTop25 = n_distinct(Year), .groups = "drop") %>%
filter(YearsInTop25 >= 10) %>%
arrange(desc(YearsInTop25))
popularity_changes <- baby_names %>%
group_by(Year, Name, Gender) %>%
summarise(Total = sum(Count), .groups = "drop") %>%
arrange(Name, Gender, Year) %>%
group_by(Name, Gender) %>%
mutate(Change = Total - lag(Total)) %>%
ungroup() %>%
arrange(desc(Change)) %>%
filter(!is.na(Change)) %>%
slice_head(n = 20)
name_longevity
library(tidyverse)
library(ggplot2)
# Calculate years in Top 25 (filtering for >= 10 years)
name_longevity <- top_25_names_per_year_gender %>%
group_by(Name, Gender) %>%
summarise(YearsInTop25 = n_distinct(Year), .groups = "drop") %>%
filter(YearsInTop25 >= 10) %>%
arrange(desc(YearsInTop25)) %>%
mutate(Gender = factor(Gender, levels = c("M", "F"))  # Ensure M/F ordering
terminate
# Calculate years in Top 25 (filtering for >= 10 years)
name_longevity <- top_25_names_per_year_gender %>%
group_by(Name, Gender) %>%
summarise(YearsInTop25 = n_distinct(Year), .groups = "drop") %>%
filter(YearsInTop25 >= 10) %>%
arrange(desc(YearsInTop25)) %>%
mutate(Gender = factor(Gender, levels = c("M", "F"))  # Ensure M/F ordering
terminate
# Calculate years in Top 25 (filtering for >= 10 years)
name_longevity <- top_25_names_per_year_gender %>%
group_by(Name, Gender) %>%
summarise(YearsInTop25 = n_distinct(Year), .groups = "drop") %>%
filter(YearsInTop25 >= 10) %>%
arrange(desc(YearsInTop25)) %>%
mutate(Gender = factor(Gender, levels = c("M", "F"))  # Ensure M/F ordering
namepersist <- ggplot(name_longevity, aes(x = YearsInTop25, y = reorder(Name, YearsInTop25), fill = Gender)) +
# Calculate years in Top 25 (filtering for >= 10 years)
name_longevity <- top_25_names_per_year_gender %>%
group_by(Name, Gender) %>%
summarise(YearsInTop25 = n_distinct(Year), .groups = "drop") %>%
filter(YearsInTop25 >= 10) %>%
arrange(desc(YearsInTop25)) %>%
mutate(Gender = factor(Gender, levels = c("M", "F"))  # Ensure M/F ordering
ggplot(name_longevity, aes(x = YearsInTop25, y = reorder(Name, YearsInTop25), fill = Gender)) +
ggplot(name_longevity, aes(x = YearsInTop25, y = reorder(Name, YearsInTop25), fill = Gender)) +
geom_bar(stat = "identity") +
facet_wrap(~Gender, scales = "free_y", ncol = 2) +  # Side-by-side
scale_fill_manual(values = c("M" = "#1f77b4", "F" = "#ff7f0e")) +  # Blue/Orange
labs(
title = "Baby Names with Longest Longevity in Top 25 (10+ Years)",
x = "Years in Top 25",
y = "Name",
caption = "Data: US Baby Names (1910-2020)"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
strip.text = element_text(face = "bold")  # Bold facet labels
)
library(tidyverse)
library(ggplot2)
# Calculate years in Top 25 (filtering for >= 10 years) and keep top 15 per gender
name_longevity <- top_25_names_per_year_gender %>%
group_by(Name, Gender) %>%
summarise(YearsInTop25 = n_distinct(Year), .groups = "drop") %>%
filter(YearsInTop25 >= 10) %>%
group_by(Gender) %>%  # Group by gender before slicing
arrange(desc(YearsInTop25), .by_group = TRUE) %>%  # Sort within each gender
slice_head(n = 15) %>%  # Keep top 15 per gender
ungroup() %>%
mutate(Gender = factor(Gender, levels = c("M", "F")))  # Ensure M/F ordering
# Create the plot
ggplot(name_longevity, aes(x = YearsInTop25, y = reorder(Name, YearsInTop25), fill = Gender)) +
geom_bar(stat = "identity") +
facet_wrap(~Gender, scales = "free_y", ncol = 2) +  # Side-by-side
scale_fill_manual(values = c("M" = "#1f77b4", "F" = "#ff7f0e")) +  # Blue/Orange
labs(
title = "Top 15 Baby Names with Longest Longevity in Top 25 (10+ Years)",
x = "Years in Top 25",
y = "Name",
caption = "Data: US Baby Names (1910-2020)"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
strip.text = element_text(face = "bold")  # Bold facet labels
)
# Create the plot
nametime <- ggplot(name_longevity, aes(x = YearsInTop25, y = reorder(Name, YearsInTop25), fill = Gender)) +
geom_bar(stat = "identity") +
facet_wrap(~Gender, scales = "free_y", ncol = 2) +  # Side-by-side
scale_fill_manual(values = c("M" = "#1f77b4", "F" = "#ff7f0e")) +  # Blue/Orange
labs(
title = "Top 15 Baby Names with Longest Longevity in Top 25 (10+ Years)",
x = "Years in Top 25",
y = "Name",
caption = "Data: US Baby Names (1910-2020)"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
strip.text = element_text(face = "bold")  # Bold facet labels
)
# Save the plot
ggsave(
filename = "nametime.png",  # change the filename as needed
plot = nametime,            # replace with your ggplot object
path = "C:/Users/pmnha/my-new-project/22660348/Question1/Results",
width = 8,
height = 6,
dpi = 300
)
# Filter top 10 per gender
top_surges <- popularity_changes %>%
group_by(Gender) %>%
slice_max(Change, n = 10) %>%
ungroup() %>%
mutate(Name = fct_reorder(Name, Change))  # For proper sorting
ggplot(top_surges, aes(x = Change, y = Name, color = Gender)) +
geom_segment(aes(xend = 0, yend = Name), linewidth = 1) +  # Lollipop stick
geom_point(size = 3) +  # Lollipop head
facet_wrap(~Gender, scales = "free_y", ncol = 2) +  # Split by gender
scale_color_manual(values = c("M" = "#1f77b4", "F" = "#e377c2")) +  # Blue/Pink
labs(
title = "Top 10 Names with Biggest Year-on-Year Surges",
subtitle = "Filtered by highest single-year increase in births",
x = "Increase in Births (Year-over-Year)",
y = "Name",
caption = "Data: US Baby Names (1910-2020)"
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
strip.text = element_text(face = "bold"),
panel.grid.major.y = element_blank()  # Remove horizontal gridlines
)
library(tidyverse)
library(scales) # For percentage formatting
# Prepare data (top 10 names per gender by YoY surge)
top_surges <- baby_names %>%
group_by(Year, Name, Gender) %>%
summarise(Total = sum(Count), .groups = "drop") %>%
arrange(Name, Gender, Year) %>%
group_by(Name, Gender) %>%
mutate(
Change = Total - lag(Total),
Pct_Increase = Change / lag(Total) * 100  # Calculate percentage surge
) %>%
ungroup() %>%
arrange(desc(Change)) %>%
filter(!is.na(Change)) %>%
group_by(Gender) %>%
slice_max(Change, n = 10) %>%
ungroup() %>%
mutate(
Name = fct_reorder(Name, Change),
Pct_Label = sprintf("%+0.1f%%", Pct_Increase)  # Format as +XX.X%
)
# Create the plot
ggplot(top_surges, aes(x = Change, y = Name, color = Gender)) +
# Thicker lollipop sticks (width = 2)
geom_segment(aes(xend = 0, yend = Name), linewidth = 2) +
# Larger lollipop heads (size = 4)
geom_point(size = 4) +
# Add percentage labels
geom_text(
aes(label = Pct_Label),
hjust = -0.2,
size = 3.5,
color = "black",
fontface = "bold"
) +
facet_wrap(~Gender, scales = "free_y", ncol = 2) +
scale_color_manual(values = c("M" = "#3498db", "F" = "#e91e63")) +
labs(
title = "Top 10 Names with Biggest Year-on-Year Surges",
subtitle = "Bar thickness = Absolute increase | Labels = Percentage surge",
x = "Increase in Births (Year-over-Year)",
y = "",
caption = "Data: US Baby Names (1910-2020)"
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", hjust = 0.5, size = 14),
plot.subtitle = element_text(hjust = 0.5, color = "gray40"),
strip.text = element_text(face = "bold", size = 12),
panel.grid.major.y = element_blank(),
axis.text.y = element_text(face = "bold")
)
library(tidyverse)
library(scales)
# Prepare data with percentage and year labels
top_surges <- baby_names %>%
group_by(Year, Name, Gender) %>%
summarise(Total = sum(Count), .groups = "drop") %>%
arrange(Name, Gender, Year) %>%
group_by(Name, Gender) %>%
mutate(
Change = Total - lag(Total),
Pct_Increase = Change / lag(Total) * 100,
Label = sprintf("%s\n%s (%d)",
Name,
percent(Pct_Increase/100, accuracy = 0.1),
Year)
) %>%
ungroup() %>%
arrange(desc(Change)) %>%
filter(!is.na(Change)) %>%
group_by(Gender) %>%
slice_max(Change, n = 10) %>%
ungroup() %>%
mutate(
Gender = factor(Gender, levels = c("F", "M")), # Force female-first ordering
Label = fct_reorder(Label, Change)
)
# Create plot with adjusted spacing
ggplot(top_surges, aes(x = Change, y = Label, color = Gender)) +
geom_segment(aes(xend = 0, yend = Label), linewidth = 2) +
geom_point(size = 4) +
facet_wrap(~Gender, scales = "free_y", ncol = 2) +
scale_color_manual(values = c("F" = "#e91e63", "M" = "#3498db")) +
labs(
title = "Top 10 Names with Biggest Year-on-Year Surges",
subtitle = "Percentage increase and year shown for each name",
x = "Increase in Births (Year-over-Year)",
y = "",
caption = "Data: US Baby Names (1910-2020)"
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", hjust = 0.5, size = 14),
strip.text = element_text(face = "bold", size = 12),
panel.spacing = unit(1.5, "lines"), # Add space between facets
axis.text.y = element_text(size = 9, lineheight = 0.9), # Better multi-line spacing
panel.grid.major.y = element_blank()
) +
scale_x_continuous(expand = expansion(mult = c(0, 0.15))) # Add right margin
#Load all libraries
library(readr)
library(dplyr)
library(ggplot2)
#Load dataset
baby_names<- readRDS("C:/Users/pmnha/my-new-project/22660348/Question1/Data/Baby_Names_By_US_State.rds")
charts <- readRDS("C:/Users/pmnha/my-new-project/22660348/Question1/Data/charts.rds")
hbo_credits <- readRDS("C:/Users/pmnha/my-new-project/22660348/Question1/Data/HBO_credits.rds")
hbo_titles <- readRDS("C:/Users/pmnha/my-new-project/22660348/Question1/Data/HBO_titles.rds")
top_25_names_per_year_gender <- baby_names %>%
group_by(Year, Gender, Name) %>%
summarise(Total = sum(Count), .groups = "drop") %>%
arrange(Year, Gender, desc(Total)) %>%
group_by(Year, Gender) %>%
slice_head(n = 25)
name_longevity <- top_25_names_per_year_gender %>%
group_by(Name, Gender) %>%
summarise(YearsInTop25 = n_distinct(Year), .groups = "drop") %>%
filter(YearsInTop25 >= 10) %>%
arrange(desc(YearsInTop25))
# Prepare data with percentage and year labels
top_surges <- baby_names %>%
group_by(Year, Name, Gender) %>%
summarise(Total = sum(Count), .groups = "drop") %>%
arrange(Name, Gender, Year) %>%
group_by(Name, Gender) %>%
mutate(
Change = Total - lag(Total),
Pct_Increase = Change / lag(Total) * 100,
Label = sprintf("%s\n%s (%d)",
Name,
percent(Pct_Increase/100, accuracy = 0.1),
Year)
) %>%
ungroup() %>%
arrange(desc(Change)) %>%
filter(!is.na(Change)) %>%
group_by(Gender) %>%
slice_max(Change, n = 10) %>%
ungroup() %>%
mutate(
Gender = factor(Gender, levels = c("F", "M")), # Force female-first ordering
Label = fct_reorder(Label, Change)
)
# Create plot with adjusted spacing
yearonyear <- ggplot(top_surges, aes(x = Change, y = Label, color = Gender)) +
geom_segment(aes(xend = 0, yend = Label), linewidth = 2) +
geom_point(size = 4) +
facet_wrap(~Gender, scales = "free_y", ncol = 2) +
scale_color_manual(values = c("F" = "#e91e63", "M" = "#3498db")) +
labs(
title = "Top 10 Names with Biggest Year-on-Year Surges",
subtitle = "Percentage increase and year shown for each name",
x = "Increase in Births (Year-over-Year)",
y = "",
caption = "Data: US Baby Names (1910-2020)"
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", hjust = 0.5, size = 14),
strip.text = element_text(face = "bold", size = 12),
panel.spacing = unit(1.5, "lines"), # Add space between facets
axis.text.y = element_text(size = 9, lineheight = 0.9), # Better multi-line spacing
panel.grid.major.y = element_blank()
) +
scale_x_continuous(expand = expansion(mult = c(0, 0.15))) # Add right margin
# Save the plot
ggsave(
filename = "yearonyear.png",  # change the filename as needed
plot = yearonyear,            # replace with your ggplot object
path = "C:/Users/pmnha/my-new-project/22660348/Question1/Results",
width = 8,
height = 6,
dpi = 300
)
library(tidyverse)
library(ggplot2)
library(tidyverse)
library(ggplot2)
# Calculate years in Top 25 (filtering for >= 10 years) and keep top 15 per gender
name_longevity <- top_25_names_per_year_gender %>%
group_by(Name, Gender) %>%
summarise(YearsInTop25 = n_distinct(Year), .groups = "drop") %>%
filter(YearsInTop25 >= 10) %>%
group_by(Gender) %>%  # Group by gender before slicing
arrange(desc(YearsInTop25), .by_group = TRUE) %>%  # Sort within each gender
slice_head(n = 15) %>%  # Keep top 15 per gender
ungroup() %>%
mutate(Gender = factor(Gender, levels = c("M", "F")))  # Ensure M/F ordering
# Create the plot
nametime <- ggplot(name_longevity, aes(x = YearsInTop25, y = reorder(Name, YearsInTop25), fill = Gender)) +
geom_bar(stat = "identity") +
facet_wrap(~Gender, scales = "free_y", ncol = 2) +  # Side-by-side
scale_fill_manual(values = c("M" = "#1f77b4", "F" = "#ff7f0e")) +  # Blue/Orange
labs(
title = "Top 15 Baby Names with Longest Longevity in Top 25 (10+ Years)",
x = "Years in Top 25",
y = "Name",
caption = "Data: US Baby Names (1910-2020)"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
strip.text = element_text(face = "bold")  # Bold facet labels
)
# Save the plot
ggsave(
filename = "nametime.png",  # change the filename as needed
plot = nametime,            # replace with your ggplot object
path = "C:/Users/pmnha/my-new-project/22660348/Question1/Results",
width = 8,
height = 6,
dpi = 300
)
#Y-O-Y changes
knitr::include_graphics("C:/Users/pmnha/my-new-project/22660348/Question1/Results/nametime.png")
knitr::include_graphics("C:/Users/pmnha/my-new-project/22660348/Question1/Results/yearonyear.png")
knitr::include_graphics("C:/Users/pmnha/my-new-project/22660348/Question1/Results/namepopularity.png")
knitr::include_graphics("C:/Users/pmnha/my-new-project/22660348/Question1/Results/fadsonewonders.png")
knitr::include_graphics("C:/Users/pmnha/my-new-project/22660348/Question1/Results/mediaimpact.jpg")
knitr::include_graphics("C:/Users/pmnha/my-new-project/22660348/Question1/Results/musicimpact.png")
knitr::include_graphics("C:/Users/pmnha/my-new-project/22660348/Question1/Results/bubble.png")
