# Create visualization with gender facets
mediaimpact <- ggplot(top_characters, aes(x = reorder(name_label, impact_ratio),
y = impact_ratio,
fill = tier)) +
geom_col(width = 0.8, color = "white", linewidth = 0.3) +
geom_text(aes(label = scales::comma(round(impact_ratio))),
hjust = -0.1, size = 3.5, color = "gray30") +
coord_flip() +
facet_grid(Gender ~ ., scales = "free_y", space = "free_y") +
scale_y_continuous(expand = expansion(mult = c(0, 0.2))) +
scale_fill_manual(values = c("Elite" = "#E63946",
"High" = "#457B9D",
"Notable" = "#A8DADC")) +
labs(
title = "<span style='font-size:18pt'>**HBO Character Names** with Strongest Baby Name Impact</span>",
subtitle = "Separated by child gender | Ratio of post/pre-show name usage",
x = NULL,
y = "Impact Ratio (Post/Pre Release)",
caption = "Data: HBO content & US baby names | Analysis: 5-year impact window"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_markdown(margin = margin(b = 8)),
plot.subtitle = element_text(color = "gray40", size = 11),
axis.text.y = element_markdown(),
legend.position = "none",
panel.grid.major.y = element_blank(),
plot.title.position = "plot",
plot.caption = element_text(color = "gray60", size = 9),
strip.text = element_text(face = "bold", size = 11),
panel.spacing = unit(1, "lines")
)
# Save the plot
ggsave(
filename = "mediaimpact.jpg",  # change the filename as needed
plot = mediaimpact,            # replace with your ggplot object
path = "C:/Users/pmnha/my-new-project/22660348/Question1/Results",
width = 8,
height = 6,
dpi = 300
)
}
baby_media()
baby_music <- function() {
if (!require("pacman")) install.packages("pacman")
pacman::p_load(
dplyr,
stringr,
ggplot2
)
# Step 1: Extract first names from artists and assign release year from chart date
artist_firstnames <- charts %>%
mutate(
firstname = str_extract(artist, "^[^ ]+"),  # First word of artist name
release_year = lubridate::year(date)
) %>%
distinct(song, firstname, release_year)  # Keep only unique song-name-year combos
# Step 2: Filter baby names and align naming
baby_names_filtered <- baby_names %>%
filter(Count > 0) %>%
select(Name, Year, Gender, Count) %>%
rename(firstname = Name)
# Step 3: Join and calculate impact
music_impact <- artist_firstnames %>%
inner_join(baby_names_filtered, by = "firstname", relationship = "many-to-many") %>%
mutate(
time_diff = Year - release_year,
period = case_when(
time_diff < 0 ~ "Pre-release",
time_diff >= 0 & time_diff <= 5 ~ "Post-release",
TRUE ~ "Beyond window"
)
) %>%
group_by(firstname, Gender, song, release_year) %>%
summarise(
pre_release = sum(Count[period == "Pre-release"]),
post_release = sum(Count[period == "Post-release"]),
impact_ratio = (post_release - pre_release) / (pre_release + 1),
.groups = "drop"
) %>%
filter(pre_release < 100, post_release > 100) %>%  # Only meaningful spikes
arrange(desc(impact_ratio))
library(ggplot2)
library(ggtext)
# Prepare top 15 impactful names
top_artists <- music_impact %>%
arrange(desc(impact_ratio)) %>%
head(15) %>%
mutate(
name_label = ifelse(impact_ratio > 1000,
paste0("<b>", firstname, "</b>"),
firstname),
tier = case_when(
impact_ratio > 5000 ~ "Elite",
impact_ratio > 1000 ~ "High",
TRUE ~ "Notable"
)
)
# Create tiered visualization
musicimpact <- # Create tiered visualization
ggplot(top_artists, aes(x = reorder(name_label, impact_ratio),
y = impact_ratio,
fill = tier)) +
geom_col(width = 0.8, color = "white", linewidth = 0.3) +
geom_text(aes(label = scales::comma(round(impact_ratio))),
hjust = -0.1, size = 3.5, color = "gray30") +
coord_flip() +
scale_y_continuous(expand = expansion(mult = c(0, 0.2))) +
scale_fill_manual(values = c("Elite" = "#E63946",
"High" = "#457B9D",
"Notable" = "#A8DADC")) +
labs(
title = "<span style='font-size:18pt'>**Elite Tier** Music Influencers on Baby Names</span>",
subtitle = "Artist first names with highest post-release/pre-release name usage ratio",
x = NULL,
y = "Impact Ratio (Post/Pre Release)",
caption = "Data: Billboard charts & US baby names | Analysis: Impact over 5-year window"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_markdown(margin = margin(b = 10)),
plot.subtitle = element_text(color = "gray40", size = 11),
axis.text.y = element_markdown(),
legend.position = "none",
panel.grid.major.y = element_blank(),
plot.title.position = "plot",
plot.caption = element_text(color = "gray60", size = 9)
) +
# Add tier annotations - CORRECTED version
geom_text(data = data.frame(x = 15, y = max(top_artists$impact_ratio)*0.85,
label = "ELITE TIER\n(5000+ impact)"),
aes(x = x, y = y, label = label),
color = "#E63946", fontface = "bold", size = 4, hjust = 0, inherit.aes = FALSE) +
geom_text(data = data.frame(x = 12, y = max(top_artists$impact_ratio)*0.6,
label = "HIGH TIER\n(1000-5000)"),
aes(x = x, y = y, label = label),
color = "#457B9D", fontface = "bold", size = 3.5, hjust = 0, inherit.aes = FALSE) +
geom_curve(aes(x = 14.5, xend = 13,
y = max(top_artists$impact_ratio)*0.8,
yend = max(top_artists$impact_ratio)*0.7),
arrow = arrow(length = unit(2, "mm")),
color = "#E63946", curvature = -0.3, inherit.aes = FALSE)
# Save the plot
ggsave(
filename = "musicimpact.png",  # change the filename as needed
plot = musicimpact,            # replace with your ggplot object
path = "C:/Users/pmnha/my-new-project/22660348/Question1/Results",
width = 8,
height = 6,
dpi = 300
)
# Add 'decade' and filter to top 10 artist-influenced names
top_10_names <- top_artists$firstname
baby_decades <- baby_names %>%
mutate(decade = floor(Year / 10) * 10) %>%
filter(Name %in% top_10_names) %>%
group_by(Name, decade, Gender) %>%
summarise(total = sum(Count), .groups = "drop")  # total per name per decade
bubble <- ggplot(baby_decades, aes(
x = Name,
y = decade,
size = total,
color = ifelse(total > quantile(total, 0.9), "#1f77b4", "gray70")  # Highlight top 10%
)) +
geom_point(alpha = 0.8) +
scale_size(range = c(3, 18), name = "Total Name Count") +
scale_y_continuous(breaks = seq(1910, 2020, by = 10)) +
scale_color_identity() +  # Use color as-is (no legend)
labs(
title = "The Rise and Fall of Popular First Names by Decade",
subtitle = "Top 10 names show shifting cultural trends—larger dots indicate higher usage",
x = "Name",
y = "Decade",
caption = "Data: Historical baby name records (1910–2020)"
) +
theme_minimal(base_size = 14) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, face = "bold"),
axis.text.y = element_text(face = "bold"),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5, color = "gray40"),
panel.grid.major = element_line(color = "gray90"),
panel.grid.minor = element_blank(),
legend.position = "right"
) +
guides(size = guide_legend(override.aes = list(color = "#1f77b4")))  # Ensure legend uses highlight color
# Save the plot
ggsave(
filename = "bubble.png",  # change the filename as needed
plot = bubble,            # replace with your ggplot object
path = "C:/Users/pmnha/my-new-project/22660348/Question1/Results",
width = 8,
height = 6,
dpi = 300
)
}
baby_music()
baby_music <- function() {
if (!require("pacman")) install.packages("pacman")
pacman::p_load(
dplyr,
stringr,
ggplot2
(ggplot2)
(ggtext)
)
baby_names<- readRDS("C:/Users/pmnha/my-new-project/22660348/Question1/Data/Baby_Names_By_US_State.rds")
charts <- readRDS("C:/Users/pmnha/my-new-project/22660348/Question1/Data/charts.rds")
hbo_credits <- readRDS("C:/Users/pmnha/my-new-project/22660348/Question1/Data/HBO_credits.rds")
hbo_titles <- readRDS("C:/Users/pmnha/my-new-project/22660348/Question1/Data/HBO_titles.rds")
# Step 1: Extract first names from artists and assign release year from chart date
artist_firstnames <- charts %>%
mutate(
firstname = str_extract(artist, "^[^ ]+"),  # First word of artist name
release_year = lubridate::year(date)
) %>%
distinct(song, firstname, release_year)  # Keep only unique song-name-year combos
# Step 2: Filter baby names and align naming
baby_names_filtered <- baby_names %>%
filter(Count > 0) %>%
select(Name, Year, Gender, Count) %>%
rename(firstname = Name)
# Step 3: Join and calculate impact
music_impact <- artist_firstnames %>%
inner_join(baby_names_filtered, by = "firstname", relationship = "many-to-many") %>%
mutate(
time_diff = Year - release_year,
period = case_when(
time_diff < 0 ~ "Pre-release",
time_diff >= 0 & time_diff <= 5 ~ "Post-release",
TRUE ~ "Beyond window"
)
) %>%
group_by(firstname, Gender, song, release_year) %>%
summarise(
pre_release = sum(Count[period == "Pre-release"]),
post_release = sum(Count[period == "Post-release"]),
impact_ratio = (post_release - pre_release) / (pre_release + 1),
.groups = "drop"
) %>%
filter(pre_release < 100, post_release > 100) %>%  # Only meaningful spikes
arrange(desc(impact_ratio))
# Prepare top 15 impactful names
top_artists <- music_impact %>%
arrange(desc(impact_ratio)) %>%
head(15) %>%
mutate(
name_label = ifelse(impact_ratio > 1000,
paste0("<b>", firstname, "</b>"),
firstname),
tier = case_when(
impact_ratio > 5000 ~ "Elite",
impact_ratio > 1000 ~ "High",
TRUE ~ "Notable"
)
)
# Create tiered visualization
musicimpact <- # Create tiered visualization
ggplot(top_artists, aes(x = reorder(name_label, impact_ratio),
y = impact_ratio,
fill = tier)) +
geom_col(width = 0.8, color = "white", linewidth = 0.3) +
geom_text(aes(label = scales::comma(round(impact_ratio))),
hjust = -0.1, size = 3.5, color = "gray30") +
coord_flip() +
scale_y_continuous(expand = expansion(mult = c(0, 0.2))) +
scale_fill_manual(values = c("Elite" = "#E63946",
"High" = "#457B9D",
"Notable" = "#A8DADC")) +
labs(
title = "<span style='font-size:18pt'>**Elite Tier** Music Influencers on Baby Names</span>",
subtitle = "Artist first names with highest post-release/pre-release name usage ratio",
x = NULL,
y = "Impact Ratio (Post/Pre Release)",
caption = "Data: Billboard charts & US baby names | Analysis: Impact over 5-year window"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_markdown(margin = margin(b = 10)),
plot.subtitle = element_text(color = "gray40", size = 11),
axis.text.y = element_markdown(),
legend.position = "none",
panel.grid.major.y = element_blank(),
plot.title.position = "plot",
plot.caption = element_text(color = "gray60", size = 9)
) +
# Add tier annotations - CORRECTED version
geom_text(data = data.frame(x = 15, y = max(top_artists$impact_ratio)*0.85,
label = "ELITE TIER\n(5000+ impact)"),
aes(x = x, y = y, label = label),
color = "#E63946", fontface = "bold", size = 4, hjust = 0, inherit.aes = FALSE) +
geom_text(data = data.frame(x = 12, y = max(top_artists$impact_ratio)*0.6,
label = "HIGH TIER\n(1000-5000)"),
aes(x = x, y = y, label = label),
color = "#457B9D", fontface = "bold", size = 3.5, hjust = 0, inherit.aes = FALSE) +
geom_curve(aes(x = 14.5, xend = 13,
y = max(top_artists$impact_ratio)*0.8,
yend = max(top_artists$impact_ratio)*0.7),
arrow = arrow(length = unit(2, "mm")),
color = "#E63946", curvature = -0.3, inherit.aes = FALSE)
# Save the plot
ggsave(
filename = "musicimpact.png",  # change the filename as needed
plot = musicimpact,            # replace with your ggplot object
path = "C:/Users/pmnha/my-new-project/22660348/Question1/Results",
width = 8,
height = 6,
dpi = 300
)
# Add 'decade' and filter to top 10 artist-influenced names
top_10_names <- top_artists$firstname
baby_decades <- baby_names %>%
mutate(decade = floor(Year / 10) * 10) %>%
filter(Name %in% top_10_names) %>%
group_by(Name, decade, Gender) %>%
summarise(total = sum(Count), .groups = "drop")  # total per name per decade
bubble <- ggplot(baby_decades, aes(
x = Name,
y = decade,
size = total,
color = ifelse(total > quantile(total, 0.9), "#1f77b4", "gray70")  # Highlight top 10%
)) +
geom_point(alpha = 0.8) +
scale_size(range = c(3, 18), name = "Total Name Count") +
scale_y_continuous(breaks = seq(1910, 2020, by = 10)) +
scale_color_identity() +  # Use color as-is (no legend)
labs(
title = "The Rise and Fall of Popular First Names by Decade",
subtitle = "Top 10 names show shifting cultural trends—larger dots indicate higher usage",
x = "Name",
y = "Decade",
caption = "Data: Historical baby name records (1910–2020)"
) +
theme_minimal(base_size = 14) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, face = "bold"),
axis.text.y = element_text(face = "bold"),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5, color = "gray40"),
panel.grid.major = element_line(color = "gray90"),
panel.grid.minor = element_blank(),
legend.position = "right"
) +
guides(size = guide_legend(override.aes = list(color = "#1f77b4")))  # Ensure legend uses highlight color
# Save the plot
ggsave(
filename = "bubble.png",  # change the filename as needed
plot = bubble,            # replace with your ggplot object
path = "C:/Users/pmnha/my-new-project/22660348/Question1/Results",
width = 8,
height = 6,
dpi = 300
)
}
baby_music()
baby_music <- function() {
if (!require("pacman")) install.packages("pacman")
pacman::p_load(
dplyr,
stringr,
ggplot2,
ggtext
)
baby_names<- readRDS("C:/Users/pmnha/my-new-project/22660348/Question1/Data/Baby_Names_By_US_State.rds")
charts <- readRDS("C:/Users/pmnha/my-new-project/22660348/Question1/Data/charts.rds")
hbo_credits <- readRDS("C:/Users/pmnha/my-new-project/22660348/Question1/Data/HBO_credits.rds")
hbo_titles <- readRDS("C:/Users/pmnha/my-new-project/22660348/Question1/Data/HBO_titles.rds")
# Step 1: Extract first names from artists and assign release year from chart date
artist_firstnames <- charts %>%
mutate(
firstname = str_extract(artist, "^[^ ]+"),  # First word of artist name
release_year = lubridate::year(date)
) %>%
distinct(song, firstname, release_year)  # Keep only unique song-name-year combos
# Step 2: Filter baby names and align naming
baby_names_filtered <- baby_names %>%
filter(Count > 0) %>%
select(Name, Year, Gender, Count) %>%
rename(firstname = Name)
# Step 3: Join and calculate impact
music_impact <- artist_firstnames %>%
inner_join(baby_names_filtered, by = "firstname", relationship = "many-to-many") %>%
mutate(
time_diff = Year - release_year,
period = case_when(
time_diff < 0 ~ "Pre-release",
time_diff >= 0 & time_diff <= 5 ~ "Post-release",
TRUE ~ "Beyond window"
)
) %>%
group_by(firstname, Gender, song, release_year) %>%
summarise(
pre_release = sum(Count[period == "Pre-release"]),
post_release = sum(Count[period == "Post-release"]),
impact_ratio = (post_release - pre_release) / (pre_release + 1),
.groups = "drop"
) %>%
filter(pre_release < 100, post_release > 100) %>%  # Only meaningful spikes
arrange(desc(impact_ratio))
# Prepare top 15 impactful names
top_artists <- music_impact %>%
arrange(desc(impact_ratio)) %>%
head(15) %>%
mutate(
name_label = ifelse(impact_ratio > 1000,
paste0("<b>", firstname, "</b>"),
firstname),
tier = case_when(
impact_ratio > 5000 ~ "Elite",
impact_ratio > 1000 ~ "High",
TRUE ~ "Notable"
)
)
# Create tiered visualization
musicimpact <- # Create tiered visualization
ggplot(top_artists, aes(x = reorder(name_label, impact_ratio),
y = impact_ratio,
fill = tier)) +
geom_col(width = 0.8, color = "white", linewidth = 0.3) +
geom_text(aes(label = scales::comma(round(impact_ratio))),
hjust = -0.1, size = 3.5, color = "gray30") +
coord_flip() +
scale_y_continuous(expand = expansion(mult = c(0, 0.2))) +
scale_fill_manual(values = c("Elite" = "#E63946",
"High" = "#457B9D",
"Notable" = "#A8DADC")) +
labs(
title = "<span style='font-size:18pt'>**Elite Tier** Music Influencers on Baby Names</span>",
subtitle = "Artist first names with highest post-release/pre-release name usage ratio",
x = NULL,
y = "Impact Ratio (Post/Pre Release)",
caption = "Data: Billboard charts & US baby names | Analysis: Impact over 5-year window"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_markdown(margin = margin(b = 10)),
plot.subtitle = element_text(color = "gray40", size = 11),
axis.text.y = element_markdown(),
legend.position = "none",
panel.grid.major.y = element_blank(),
plot.title.position = "plot",
plot.caption = element_text(color = "gray60", size = 9)
) +
# Add tier annotations - CORRECTED version
geom_text(data = data.frame(x = 15, y = max(top_artists$impact_ratio)*0.85,
label = "ELITE TIER\n(5000+ impact)"),
aes(x = x, y = y, label = label),
color = "#E63946", fontface = "bold", size = 4, hjust = 0, inherit.aes = FALSE) +
geom_text(data = data.frame(x = 12, y = max(top_artists$impact_ratio)*0.6,
label = "HIGH TIER\n(1000-5000)"),
aes(x = x, y = y, label = label),
color = "#457B9D", fontface = "bold", size = 3.5, hjust = 0, inherit.aes = FALSE) +
geom_curve(aes(x = 14.5, xend = 13,
y = max(top_artists$impact_ratio)*0.8,
yend = max(top_artists$impact_ratio)*0.7),
arrow = arrow(length = unit(2, "mm")),
color = "#E63946", curvature = -0.3, inherit.aes = FALSE)
# Save the plot
ggsave(
filename = "musicimpact.png",  # change the filename as needed
plot = musicimpact,            # replace with your ggplot object
path = "C:/Users/pmnha/my-new-project/22660348/Question1/Results",
width = 8,
height = 6,
dpi = 300
)
# Add 'decade' and filter to top 10 artist-influenced names
top_10_names <- top_artists$firstname
baby_decades <- baby_names %>%
mutate(decade = floor(Year / 10) * 10) %>%
filter(Name %in% top_10_names) %>%
group_by(Name, decade, Gender) %>%
summarise(total = sum(Count), .groups = "drop")  # total per name per decade
bubble <- ggplot(baby_decades, aes(
x = Name,
y = decade,
size = total,
color = ifelse(total > quantile(total, 0.9), "#1f77b4", "gray70")  # Highlight top 10%
)) +
geom_point(alpha = 0.8) +
scale_size(range = c(3, 18), name = "Total Name Count") +
scale_y_continuous(breaks = seq(1910, 2020, by = 10)) +
scale_color_identity() +  # Use color as-is (no legend)
labs(
title = "The Rise and Fall of Popular First Names by Decade",
subtitle = "Top 10 names show shifting cultural trends—larger dots indicate higher usage",
x = "Name",
y = "Decade",
caption = "Data: Historical baby name records (1910–2020)"
) +
theme_minimal(base_size = 14) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, face = "bold"),
axis.text.y = element_text(face = "bold"),
plot.title = element_text(size = 18, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5, color = "gray40"),
panel.grid.major = element_line(color = "gray90"),
panel.grid.minor = element_blank(),
legend.position = "right"
) +
guides(size = guide_legend(override.aes = list(color = "#1f77b4")))  # Ensure legend uses highlight color
# Save the plot
ggsave(
filename = "bubble.png",  # change the filename as needed
plot = bubble,            # replace with your ggplot object
path = "C:/Users/pmnha/my-new-project/22660348/Question1/Results",
width = 8,
height = 6,
dpi = 300
)
}
baby_music()
