"Duration (weeks)", "Length of the study period in weeks.",
"Physical Activity Level", "Activity level: Sedentary, Lightly, Moderately, Very Active.",
"Macronutrient Breakdown", "Diet composition: carbs, proteins, fats (%).",
"Sleep Quality", "Self-reported: Poor, Fair, Good, Excellent.",
"Stress Level", "Self-reported stress score (1-10)."
) %>%
kable(booktabs = TRUE,
caption = "Table 1: Data Dictionary - Variable Descriptions",
col.names = c("Variable", "Description"),
align = c("l", "l")) %>%
kable_styling(latex_options = c("hold_position", "striped"), font_size = 10)
}
# --------------------------------------------------------------------------------------
# Data Transformation Functions
# --------------------------------------------------------------------------------------
create_age_groups <- function(data) {
#' Create age groups for stratified analysis
#' @param data Health data tibble
#' @return Modified tibble with age_group column
data %>%
mutate(age_group = case_when(
Age < 20 ~ "Teenagers (<20)",
Age >= 20 & Age < 30 ~ "Adults (20-29)",
Age >= 30 & Age < 40 ~ "Early Career (30-39)",
Age >= 40 & Age < 50 ~ "Middle-aged (40-49)",
Age >= 50 & Age < 65 ~ "Preretirement (50-64)",
Age >= 65 ~ "Seniors (65+)",
TRUE ~ NA_character_
))
}
create_risk_categories <- function(data) {
#' Create risk categories based on thresholds
#' @param data Health data tibble
#' @return Modified tibble with risk category columns
data %>%
mutate(
`High Stress Risk` = ifelse(`Stress Level` >= 7, "Yes", "No"),
`Poor Sleep Risk` = ifelse(`Sleep Quality` %in% c("Poor", "Fair"), "Yes", "No"),
`Weight Change Risk` = ifelse(
(`Weight Change (lbs)` > 5 & `Daily Caloric Surplus/Deficit` > 300) |
(`Weight Change (lbs)` < -5 & `Daily Caloric Surplus/Deficit` < -500),
"Yes", "No"
),
`Sedentary Lifestyle` = ifelse(`Physical Activity Level` == "Sedentary", "Yes", "No"),
stress_group = ifelse(`Stress Level` >= 7, "High Stress", "Low Stress"),
sleep_group = ifelse(`Sleep Quality` %in% c("Poor", "Fair"), "Poor Sleep", "Good Sleep"),
combined_group = paste(sleep_group, stress_group, sep = " + "),
sleep_risk = factor(ifelse(`Sleep Quality` %in% c("Poor", "Fair"), "Poor Sleep", "Good Sleep")),
stress_risk = factor(ifelse(`Stress Level` >= 7, "High Stress", "Low Stress")),
physical_activity = factor(`Physical Activity Level`),
age_group = factor(age_group),
Gender = factor(Gender),
rate_weight_change = `Weight Change (lbs)` / `Duration (weeks)`,
unrealistic_change = abs(rate_weight_change) > 2
)
}
# --------------------------------------------------------------------------------------
# Summary Statistics Functions
# --------------------------------------------------------------------------------------
summarize_age_distribution <- function(data) {
#' Generate summary statistics for age distribution
#' @param data Health data tibble
#' @return List with summary statistics and plot
age_summary <- data %>%
summarise(
count = n(),
min_age = min(Age, na.rm = TRUE),
max_age = max(Age, na.rm = TRUE),
mean_age = mean(Age, na.rm = TRUE),
median_age = median(Age, na.rm = TRUE),
sd_age = sd(Age, na.rm = TRUE)
)
age_plot <- ggplot(data, aes(x = Age)) +
geom_histogram(binwidth = 5, fill = "skyblue", color = "black") +
labs(title = "Age Distribution", x = "Age (years)", y = "Count") +
theme_minimal()
list(summary = age_summary, plot = age_plot)
}
summarize_gender_distribution <- function(data) {
#' Generate gender distribution summary
#' @param data Health data tibble
#' @return Tibble with gender counts and percentages
data %>%
count(Gender) %>%
mutate(percent = n / sum(n) * 100)
}
summarize_weight_change <- function(data) {
#' Summarize weight change by gender and age group
#' @param data Health data tibble
#' @return Tibble with summary statistics
data %>%
group_by(Gender, age_group) %>%
summarise(
mean_weight_change = mean(`Weight Change (lbs)`, na.rm = TRUE),
median_weight_change = median(`Weight Change (lbs)`, na.rm = TRUE),
n = n(),
.groups = 'drop'
)
}
summarize_calories_activity <- function(data) {
#' Summarize calories by physical activity level
#' @param data Health data tibble
#' @return Tibble with summary statistics
data %>%
group_by(`Physical Activity Level`) %>%
summarise(
mean_surplus_deficit = mean(`Daily Caloric Surplus/Deficit`, na.rm = TRUE),
count = n()
)
}
# --------------------------------------------------------------------------------------
# Modeling Functions
# --------------------------------------------------------------------------------------
fit_sleep_stress_model <- function(data) {
#' Fit regression model for sleep and stress interaction
#' @param data Health data tibble
#' @return Linear model object
lm(`Weight Change (lbs)` ~ sleep_risk * stress_risk + physical_activity + age_group + Gender +
`Daily Caloric Surplus/Deficit` + `BMR (Calories)` + `Duration (weeks)`, data = data)
}
fit_stress_age_model <- function(data) {
#' Fit regression model for stress and age interaction
#' @param data Health data tibble
#' @return Linear model object
lm(`Weight Change (lbs)` ~ `High Stress Risk` * age_group, data = data)
}
# --------------------------------------------------------------------------------------
# Visualization Functions
# --------------------------------------------------------------------------------------
create_boxplot_sleep_stress <- function(data) {
#' Create boxplot of weight change by sleep and stress groups
#' @param data Health data tibble
#' @return ggplot object
ggplot(data, aes(x = interaction(sleep_risk, stress_risk),
y = `Weight Change (lbs)`,
fill = interaction(sleep_risk, stress_risk))) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = `Sedentary Lifestyle`), width = 0.2, alpha = 0.6) +
labs(
title = "Weight Change by Sleep and Stress Groups\nColored by Sedentary Lifestyle",
x = "Sleep and Stress Group",
y = "Weight Change (lbs)",
color = "Sedentary Lifestyle"
) +
theme_minimal() +
theme(legend.position = "right")
}
# --------------------------------------------------------------------------------------
# Pivot Table Functions
# --------------------------------------------------------------------------------------
create_sleep_pivot_table <- function(data) {
#' Create pivot table for sleep risk by age group
#' @param data Health data tibble
#' @return Tibble with summary statistics
data %>%
group_by(`Poor Sleep Risk`, age_group) %>%
summarise(
Mean_Weight_Change = mean(`Weight Change (lbs)`, na.rm = TRUE),
Count = n(),
.groups = "drop"
) %>%
arrange(`Poor Sleep Risk`, age_group)
}
create_stress_pivot_table <- function(data) {
#' Create pivot table for stress risk by age group
#' @param data Health data tibble
#' @return Tibble with summary statistics
data %>%
group_by(`High Stress Risk`, age_group) %>%
summarise(
Mean_Weight_Change = mean(`Weight Change (lbs)`, na.rm = TRUE),
Count = n(),
.groups = "drop"
) %>%
arrange(`High Stress Risk`, age_group)
}
# --------------------------------------------------------------------------------------
# Optimized Main Execution
# --------------------------------------------------------------------------------------
main_analysis <- function(data_path, results_dir = "Results") {
# Create output directory if it doesn't exist
if (!dir.exists(results_dir)) dir.create(results_dir)
# Load and transform data
raw_data <- load_health_data(data_path)
data <- raw_data %>%
create_age_groups() %>%
create_risk_categories()
# --- Summary Statistics ---
age_summary <- summarize_age_distribution(data)
gender_summary <- summarize_gender_distribution(data)
weight_summary <- summarize_weight_change(data)
calories_summary <- summarize_calories_activity(data)
# Save age distribution plot
ggsave(filename = file.path(results_dir, "Age_Distribution.png"), plot = age_summary$plot, width = 7, height = 5)
# Save age summary as CSV
write_csv(age_summary$summary, file.path(results_dir, "Age_Summary.csv"))
# Save other summaries as CSV
write_csv(gender_summary, file.path(results_dir, "Gender_Distribution.csv"))
write_csv(weight_summary, file.path(results_dir, "Weight_Change_Summary.csv"))
write_csv(calories_summary, file.path(results_dir, "Caloric_Activity_Summary.csv"))
# --- Regression Models ---
model1 <- fit_sleep_stress_model(data)
model2 <- fit_stress_age_model(data)
# Save model summaries as text
write_lines(capture.output(summary(model1)), file.path(results_dir, "Sleep_Stress_Model.txt"))
write_lines(capture.output(summary(model2)), file.path(results_dir, "Stress_Age_Model.txt"))
# --- Visualizations ---
sleep_stress_plot <- create_boxplot_sleep_stress(data)
ggsave(filename = file.path(results_dir, "Sleep_Stress_Boxplot.png"), plot = sleep_stress_plot, width = 8, height = 5)
# --- Pivot Tables ---
sleep_pivot <- create_sleep_pivot_table(data)
stress_pivot <- create_stress_pivot_table(data)
write_csv(sleep_pivot, file.path(results_dir, "Sleep_Risk_Pivot.csv"))
write_csv(stress_pivot, file.path(results_dir, "Stress_Risk_Pivot.csv"))
# --- Log Completion ---
message("Analysis complete. All results saved to ", results_dir)
}
main_analysis()
# Question 5: Health Data Analysis - Weight Change, Stress, Sleep, and Physical Activity
# --------------------------------------------------------------------------------------
# Optimized using functional programming principles while maintaining all original outputs
# Load required packages efficiently with pacman (installs if missing)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, skimr, kableExtra, broom, GGally, readr, future, furrr)
# --------------------------------------------------------------------------------------
# Data Loading and Initial Setup Functions
# --------------------------------------------------------------------------------------
load_health_data <- function(path) {
#' Load health data from CSV file
#' @param path Path to CSV file
#' @return Tibble with health data
read_csv(path, col_names = TRUE)
}
create_data_dictionary <- function() {
#' Create data dictionary for reference
#' @return Formatted kable table
tribble(
~Variable, ~Description,
"Participant ID", "Unique identifier for each participant.",
"Age", "Participant's age (years).",
"Gender", "Participant's gender (M/F).",
"Current Weight (lbs)", "Baseline weight at study start.",
"BMR (Calories)", "Basal Metabolic Rate (calories burned at rest).",
"Daily Calories Consumed", "Total daily caloric intake.",
"Daily Caloric Surplus/Deficit", "Calories consumed minus BMR.",
"Weight Change (lbs)", "Change in weight over the study period.",
"Duration (weeks)", "Length of the study period in weeks.",
"Physical Activity Level", "Activity level: Sedentary, Lightly, Moderately, Very Active.",
"Macronutrient Breakdown", "Diet composition: carbs, proteins, fats (%).",
"Sleep Quality", "Self-reported: Poor, Fair, Good, Excellent.",
"Stress Level", "Self-reported stress score (1-10)."
) %>%
kable(booktabs = TRUE,
caption = "Table 1: Data Dictionary - Variable Descriptions",
col.names = c("Variable", "Description"),
align = c("l", "l")) %>%
kable_styling(latex_options = c("hold_position", "striped"), font_size = 10)
}
# --------------------------------------------------------------------------------------
# Data Transformation Functions
# --------------------------------------------------------------------------------------
create_age_groups <- function(data) {
#' Create age groups for stratified analysis
#' @param data Health data tibble
#' @return Modified tibble with age_group column
data %>%
mutate(age_group = case_when(
Age < 20 ~ "Teenagers (<20)",
Age >= 20 & Age < 30 ~ "Adults (20-29)",
Age >= 30 & Age < 40 ~ "Early Career (30-39)",
Age >= 40 & Age < 50 ~ "Middle-aged (40-49)",
Age >= 50 & Age < 65 ~ "Preretirement (50-64)",
Age >= 65 ~ "Seniors (65+)",
TRUE ~ NA_character_
))
}
create_risk_categories <- function(data) {
#' Create risk categories based on thresholds
#' @param data Health data tibble
#' @return Modified tibble with risk category columns
data %>%
mutate(
`High Stress Risk` = ifelse(`Stress Level` >= 7, "Yes", "No"),
`Poor Sleep Risk` = ifelse(`Sleep Quality` %in% c("Poor", "Fair"), "Yes", "No"),
`Weight Change Risk` = ifelse(
(`Weight Change (lbs)` > 5 & `Daily Caloric Surplus/Deficit` > 300) |
(`Weight Change (lbs)` < -5 & `Daily Caloric Surplus/Deficit` < -500),
"Yes", "No"
),
`Sedentary Lifestyle` = ifelse(`Physical Activity Level` == "Sedentary", "Yes", "No"),
stress_group = ifelse(`Stress Level` >= 7, "High Stress", "Low Stress"),
sleep_group = ifelse(`Sleep Quality` %in% c("Poor", "Fair"), "Poor Sleep", "Good Sleep"),
combined_group = paste(sleep_group, stress_group, sep = " + "),
sleep_risk = factor(ifelse(`Sleep Quality` %in% c("Poor", "Fair"), "Poor Sleep", "Good Sleep")),
stress_risk = factor(ifelse(`Stress Level` >= 7, "High Stress", "Low Stress")),
physical_activity = factor(`Physical Activity Level`),
age_group = factor(age_group),
Gender = factor(Gender),
rate_weight_change = `Weight Change (lbs)` / `Duration (weeks)`,
unrealistic_change = abs(rate_weight_change) > 2
)
}
# --------------------------------------------------------------------------------------
# Summary Statistics Functions
# --------------------------------------------------------------------------------------
summarize_age_distribution <- function(data) {
#' Generate summary statistics for age distribution
#' @param data Health data tibble
#' @return List with summary statistics and plot
age_summary <- data %>%
summarise(
count = n(),
min_age = min(Age, na.rm = TRUE),
max_age = max(Age, na.rm = TRUE),
mean_age = mean(Age, na.rm = TRUE),
median_age = median(Age, na.rm = TRUE),
sd_age = sd(Age, na.rm = TRUE)
)
age_plot <- ggplot(data, aes(x = Age)) +
geom_histogram(binwidth = 5, fill = "skyblue", color = "black") +
labs(title = "Age Distribution", x = "Age (years)", y = "Count") +
theme_minimal()
list(summary = age_summary, plot = age_plot)
}
summarize_gender_distribution <- function(data) {
#' Generate gender distribution summary
#' @param data Health data tibble
#' @return Tibble with gender counts and percentages
data %>%
count(Gender) %>%
mutate(percent = n / sum(n) * 100)
}
summarize_weight_change <- function(data) {
#' Summarize weight change by gender and age group
#' @param data Health data tibble
#' @return Tibble with summary statistics
data %>%
group_by(Gender, age_group) %>%
summarise(
mean_weight_change = mean(`Weight Change (lbs)`, na.rm = TRUE),
median_weight_change = median(`Weight Change (lbs)`, na.rm = TRUE),
n = n(),
.groups = 'drop'
)
}
summarize_calories_activity <- function(data) {
#' Summarize calories by physical activity level
#' @param data Health data tibble
#' @return Tibble with summary statistics
data %>%
group_by(`Physical Activity Level`) %>%
summarise(
mean_surplus_deficit = mean(`Daily Caloric Surplus/Deficit`, na.rm = TRUE),
count = n()
)
}
# --------------------------------------------------------------------------------------
# Modeling Functions
# --------------------------------------------------------------------------------------
fit_sleep_stress_model <- function(data) {
#' Fit regression model for sleep and stress interaction
#' @param data Health data tibble
#' @return Linear model object
lm(`Weight Change (lbs)` ~ sleep_risk * stress_risk + physical_activity + age_group + Gender +
`Daily Caloric Surplus/Deficit` + `BMR (Calories)` + `Duration (weeks)`, data = data)
}
fit_stress_age_model <- function(data) {
#' Fit regression model for stress and age interaction
#' @param data Health data tibble
#' @return Linear model object
lm(`Weight Change (lbs)` ~ `High Stress Risk` * age_group, data = data)
}
# --------------------------------------------------------------------------------------
# Visualization Functions
# --------------------------------------------------------------------------------------
create_boxplot_sleep_stress <- function(data) {
#' Create boxplot of weight change by sleep and stress groups
#' @param data Health data tibble
#' @return ggplot object
ggplot(data, aes(x = interaction(sleep_risk, stress_risk),
y = `Weight Change (lbs)`,
fill = interaction(sleep_risk, stress_risk))) +
geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = `Sedentary Lifestyle`), width = 0.2, alpha = 0.6) +
labs(
title = "Weight Change by Sleep and Stress Groups\nColored by Sedentary Lifestyle",
x = "Sleep and Stress Group",
y = "Weight Change (lbs)",
color = "Sedentary Lifestyle"
) +
theme_minimal() +
theme(legend.position = "right")
}
# --------------------------------------------------------------------------------------
# Pivot Table Functions
# --------------------------------------------------------------------------------------
create_sleep_pivot_table <- function(data) {
#' Create pivot table for sleep risk by age group
#' @param data Health data tibble
#' @return Tibble with summary statistics
data %>%
group_by(`Poor Sleep Risk`, age_group) %>%
summarise(
Mean_Weight_Change = mean(`Weight Change (lbs)`, na.rm = TRUE),
Count = n(),
.groups = "drop"
) %>%
arrange(`Poor Sleep Risk`, age_group)
}
create_stress_pivot_table <- function(data) {
#' Create pivot table for stress risk by age group
#' @param data Health data tibble
#' @return Tibble with summary statistics
data %>%
group_by(`High Stress Risk`, age_group) %>%
summarise(
Mean_Weight_Change = mean(`Weight Change (lbs)`, na.rm = TRUE),
Count = n(),
.groups = "drop"
) %>%
arrange(`High Stress Risk`, age_group)
}
# --------------------------------------------------------------------------------------
# Optimized Main Execution
# --------------------------------------------------------------------------------------
main_analysis <- function(data_path, results_dir = "Results") {
# Create output directory if it doesn't exist
if (!dir.exists(results_dir)) dir.create(results_dir)
# Load and transform data
raw_data <- load_health_data(data_path)
data <- raw_data %>%
create_age_groups() %>%
create_risk_categories()
# --- Summary Statistics ---
age_summary <- summarize_age_distribution(data)
gender_summary <- summarize_gender_distribution(data)
weight_summary <- summarize_weight_change(data)
calories_summary <- summarize_calories_activity(data)
# Save age distribution plot
ggsave(filename = file.path(results_dir, "Age_Distribution.png"), plot = age_summary$plot, width = 7, height = 5)
# Save age summary as CSV
write_csv(age_summary$summary, file.path(results_dir, "Age_Summary.csv"))
# Save other summaries as CSV
write_csv(gender_summary, file.path(results_dir, "Gender_Distribution.csv"))
write_csv(weight_summary, file.path(results_dir, "Weight_Change_Summary.csv"))
write_csv(calories_summary, file.path(results_dir, "Caloric_Activity_Summary.csv"))
# --- Regression Models ---
model1 <- fit_sleep_stress_model(data)
model2 <- fit_stress_age_model(data)
# Save model summaries as text
write_lines(capture.output(summary(model1)), file.path(results_dir, "Sleep_Stress_Model.txt"))
write_lines(capture.output(summary(model2)), file.path(results_dir, "Stress_Age_Model.txt"))
# --- Visualizations ---
sleep_stress_plot <- create_boxplot_sleep_stress(data)
ggsave(filename = file.path(results_dir, "Sleep_Stress_Boxplot.png"), plot = sleep_stress_plot, width = 8, height = 5)
# --- Pivot Tables ---
sleep_pivot <- create_sleep_pivot_table(data)
stress_pivot <- create_stress_pivot_table(data)
write_csv(sleep_pivot, file.path(results_dir, "Sleep_Risk_Pivot.csv"))
write_csv(stress_pivot, file.path(results_dir, "Stress_Risk_Pivot.csv"))
# --- Log Completion ---
message("Analysis complete. All results saved to ", results_dir)
}
main_analysis("C:/Users/pmnha/OneDrive/Desktop/Masters 2025_Economics/Datascience/Exam/22660348/Question5/Data/HealthCare.csv")
source("C:/Users/pmnha/OneDrive/Desktop/Masters 2025_Economics/Datascience/Exam/22660348/Question5/Code/Health.R")
source("C:/Users/pmnha/OneDrive/Desktop/Masters 2025_Economics/Datascience/Exam/22660348/Question5/Code/Health.R")
knitr::opts_chunk$set(echo = FALSE)
main_analysis("C:/Users/pmnha/OneDrive/Desktop/Masters 2025_Economics/Datascience/Exam/22660348/Question5/Data/HealthCare.csv")
knitr::opts_chunk$set(echo = FALSE)
main_analysis("C:/Users/pmnha/OneDrive/Desktop/Masters 2025_Economics/Datascience/Exam/22660348/Question5/Data/HealthCare.csv")
# Load required packages efficiently with pacman
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, broom, kableExtra)
# Load necessary packages here too, if not inside the script
# Set path to results
results_dir <- "Results"
# Load pivot tables
sleep_pivot <- read_csv(file.path(results_dir, "Sleep_Risk_Pivot.csv"))
stress_pivot <- read_csv(file.path(results_dir, "Stress_Risk_Pivot.csv"))
# Load regression summaries
sleep_model_text <- readLines(file.path(results_dir, "Sleep_Stress_Model.txt"))
stress_model_text <- readLines(file.path(results_dir, "Stress_Age_Model.txt"))
# Set path to results
results_dir <- "Results"
# Load pivot tables
sleep_pivot <- read_csv(file.path(results_dir, "Sleep_Risk_Pivot.csv"))
stress_pivot <- read_csv(file.path(results_dir, "Stress_Risk_Pivot.csv"))
# Load regression summaries
sleep_model_text <- readLines(file.path(results_dir, "Sleep_Stress_Model.txt"))
stress_model_text <- readLines(file.path(results_dir, "Stress_Age_Model.txt"))
knitr::include_graphics(file.path(results_dir, "Sleep_Stress_Boxplot.png"))
sleep_pivot %>%
kable(booktabs = TRUE, caption = "Table: Sleep Risk vs. Age Group") %>%
kable_styling(latex_options = c("striped"))
stress_pivot %>%
kable(booktabs = TRUE, caption = "Table: Stress Risk vs. Age Group") %>%
kable_styling(latex_options = c("striped"))
cat(sleep_model_text, sep = "\n")
cat(stress_model_text, sep = "\n")
knitr::opts_chunk$set(echo = FALSE)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, broom, kableExtra, ggplot2)
cat("Analysis of key determinants of health care based on WHO-funded data\nFocus on sleep, stress, physical activity, and demographic differences\nGoal: Provide practical insights for improving health outcomes")
# Set path to results
results_dir <- "Results"
# Load pivot tables
sleep_pivot <- read_csv(file.path(results_dir, "Sleep_Risk_Pivot.csv"))
stress_pivot <- read_csv(file.path(results_dir, "Stress_Risk_Pivot.csv"))
# Load regression summaries
sleep_model_text <- readLines(file.path(results_dir, "Sleep_Stress_Model.txt"))
stress_model_text <- readLines(file.path(results_dir, "Stress_Age_Model.txt"))
library(flextable)
